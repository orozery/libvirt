From ccc0c2e4de58d62308e224076a7aa979ae97b520 Mon Sep 17 00:00:00 2001
From: Jiri Denemark <jdenemar@redhat.com>
Date: Wed, 25 Mar 2020 11:28:13 +0100
Subject: [PATCH] cpu_x86: Use glib allocation for virCPUx86Model
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
Reviewed-by: JÃ¡n Tomko <jtomko@redhat.com>

Origin: upstream, https://libvirt.org/git/?p=libvirt.git;a=commit;h=ccc0c2e4de
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/1922907
Last-Update: 2021-04-07

---
 src/cpu/cpu_x86.c | 31 ++++++++-----------------------
 1 file changed, 8 insertions(+), 23 deletions(-)

diff --git a/src/cpu/cpu_x86.c b/src/cpu/cpu_x86.c
index cf0f8a7120..7bad9dbb76 100644
--- a/src/cpu/cpu_x86.c
+++ b/src/cpu/cpu_x86.c
@@ -1111,29 +1111,18 @@ x86FeatureParse(xmlXPathContextPtr ctxt,
 }
 
 
-static virCPUx86ModelPtr
-x86ModelNew(void)
-{
-    virCPUx86ModelPtr model;
-
-    if (VIR_ALLOC(model) < 0)
-        return NULL;
-
-    return model;
-}
-
-
 static void
 x86ModelFree(virCPUx86ModelPtr model)
 {
     if (!model)
         return;
 
-    VIR_FREE(model->name);
-    VIR_FREE(model->signatures);
+    g_free(model->name);
+    g_free(model->signatures);
     virCPUx86DataClear(&model->data);
-    VIR_FREE(model);
+    g_free(model);
 }
+G_DEFINE_AUTOPTR_CLEANUP_FUNC(virCPUx86Model, x86ModelFree);
 
 
 static int
@@ -1161,9 +1150,7 @@ x86ModelCopy(virCPUx86ModelPtr model)
 {
     virCPUx86ModelPtr copy;
 
-    if (VIR_ALLOC(copy) < 0)
-        return NULL;
-
+    copy = g_new0(virCPUx86Model, 1);
     copy->name = g_strdup(model->name);
 
     if (x86ModelCopySignatures(copy, model) < 0) {
@@ -1216,7 +1203,7 @@ x86ModelFromCPU(const virCPUDef *cpu,
     if (cpu->type == VIR_CPU_TYPE_HOST &&
         policy != VIR_CPU_FEATURE_REQUIRE &&
         policy != -1)
-        return x86ModelNew();
+        return g_new0(virCPUx86Model, 1);
 
     if (cpu->model &&
         (policy == VIR_CPU_FEATURE_REQUIRE || policy == -1)) {
@@ -1228,7 +1215,7 @@ x86ModelFromCPU(const virCPUDef *cpu,
 
         model = x86ModelCopy(model);
     } else {
-        model = x86ModelNew();
+        model = g_new0(virCPUx86Model, 1);
     }
 
     if (!model)
@@ -1540,9 +1527,7 @@ x86ModelParse(xmlXPathContextPtr ctxt,
         goto cleanup;
     }
 
-    if (!(model = x86ModelNew()))
-        goto cleanup;
-
+    model = g_new0(virCPUx86Model, 1);
     model->name = g_strdup(name);
 
     if (x86ModelParseDecode(model, ctxt) < 0)
-- 
2.31.1

